name: ESP32

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule

on:
  push:
  pull_request:
    paths-ignore:
      - "examples/**"
      - "README.md"
      - "ci/*unix*.sh"
      - ".github/workflows/build_*.yml"
      

jobs:
  tensorflow_micropython_esp32_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ESP32-MICROLITE No SPIRAM - 4MB Flash
        run: |
          mv * ..
          cd ..
          source ./scripts/build.sh && prepare_dependencies
          source ./dependencies/micropython/tools/ci.sh && ci_esp32_idf50_setup
          echo "BUILDING MICROLITE"
          source ./scripts/build.sh && build_esp32 "MICROLITE"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE"
          ls $TARGET/build-MICROLITE
        shell: bash

      - name: Archive ESP32-MICROLITE No SPIRAM - 4 MB Flash firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE/firmware.bin

      - name: Build MICROLITE_C3 firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_C3"
          source ./scripts/build.sh && build_esp32 "MICROLITE_C3"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_C3"
          ls $TARGET/build-MICROLITE_C3
        shell: bash

      - name: Archive ESP32-MICROLITE_C3 firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_C3/firmware.bin

      - name: Build MICROLITE_S2_SPIRAM firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_S2_SPIRAM"
          source ./scripts/build.sh && build_esp32 "MICROLITE_S2_SPIRAM"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S2_SPIRAM"
          ls $TARGET/build-MICROLITE_S2_SPIRAM
        shell: bash

      - name: Archive ESP32-MICROLITE_S2_SPIRAM firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_S2_SPIRAM/firmware.bin

      - name: Build MICROLITE_S3 firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_S3"
          source ./scripts/build.sh && build_esp32 "MICROLITE_S3"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S3"
          ls $TARGET/build-MICROLITE_S3
        shell: bash

      - name: Archive ESP32-MICROLITE_S3 firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_S3/firmware.bin

      - name: Build MICROLITE_S3_SPIRAM firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_S3_SPIRAM"
          source ./scripts/build.sh && build_esp32 "MICROLITE_S3_SPIRAM"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S3_SPIRAM"
          ls $TARGET/build-MICROLITE_S3_SPIRAM
        shell: bash

      - name: Archive ESP32-MICROLITE_S3_SPIRAM firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_S3_SPIRAM/firmware.bin

      - name: Build MICROLITE_S3_SPIRAM_CS_GPIO_20 firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_S3_SPIRAM_CS_GPIO_20"
          source ./scripts/build.sh && build_esp32 "MICROLITE_S3_SPIRAM_CS_GPIO_20"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S3_SPIRAM_CS_GPIO_20"
          ls $TARGET/build-MICROLITE_S3_SPIRAM_CS_GPIO_20
        shell: bash

      - name: Archive ESP32-MICROLITE_S3_SPIRAM_CS_GPIO_20 firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_S3_SPIRAM_CS_GPIO_20/firmware.bin


      - name: Build MICROLITE_S3_SPIRAM_OCTAL firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_S3_SPIRAM_OCTAL"
          source ./scripts/build.sh && build_esp32 "MICROLITE_S3_SPIRAM_OCTAL"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S3_SPIRAM_OCTAL"
          ls $TARGET/build-MICROLITE_S3_SPIRAM_OCTAL
        shell: bash

      - name: Archive ESP32-MICROLITE_S3_SPIRAM_OCTAL firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_S3_SPIRAM_OCTAL/firmware.bin


      - name: Build MICROLITE_SPIRAM firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_SPIRAM"
          source ./scripts/build.sh && build_esp32 "MICROLITE_SPIRAM"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_SPIRAM"
          ls $TARGET/build-MICROLITE_SPIRAM
        shell: bash

      - name: Archive ESP32-MICROLITE_SPIRAM firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_SPIRAM/firmware.bin


      - name: Build with psram support and 16MB Flash firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_SPIRAM_16M"
          source ./scripts/build.sh && build_esp32 "MICROLITE_SPIRAM_16M"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_SPIRAM_16M"
          ls $TARGET/build-MICROLITE_SPIRAM_16M
        shell: bash

      - name: Archive ESP32-MICROLITE_SPIRAM_16M firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_SPIRAM_16M/firmware.bin

      - name: Build with psram support and 16MB Flash firmware
        run: |
          cd ..
          echo "BUILDING MICROLITE_SPIRAM_CAM"
          source ./scripts/build.sh && build_esp32 "MICROLITE_SPIRAM_CAM"
          TARGET=$(pwd)/dependencies/micropython/ports/esp32
          echo "TARGET=$TARGET"
          ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_SPIRAM_CAM"
          ls $TARGET/build-MICROLITE_SPIRAM_CAM
        shell: bash

      - name: Archive ESP32-MICROLITE_SPIRAM_CAM firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-firmware
          path: /home/runner/work/tensorflow-micropython-examples/dependencies/micropython/ports/esp32/build-MICROLITE_SPIRAM_CAM/firmware.bin